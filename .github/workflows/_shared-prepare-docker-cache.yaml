
on:
  workflow_call:
    outputs:
      kurtosis_version:
        description: "The latest version of the kurtosis cli (used as caching key)."
        value: ${{ jobs.run_prepare.outputs.kurtosis_version }}

jobs:
  run_prepare:
    name: "Prepare Docker cache"
    runs-on: ubuntu-latest
    outputs:
      kurtosis_version: ${{ steps.kurtosis_version.outputs.kurtosis_version }}
    steps:
    - name: Get kurtosis version
      id: kurtosis_version
      run: |
        echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
        sudo apt update

        kurtosis_version=$(apt show kurtosis-cli | grep Version | awk '{print $2}')
        echo "kurtosis_version=$kurtosis_version" >> $GITHUB_OUTPUT

        echo "Kurtosis version: $kurtosis_version"
    - name: Check if cache key exists
      id: check_cache
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        KEY="kurtosis-docker-${{ runner.os }}-${{ steps.kurtosis_version.outputs.kurtosis_version }}"
        CACHE_HIT=$(gh cache list --repo ${{ github.repository }} --json "key" --key "$KEY" | jq -c ".[]" | wc -l)
        if [ $CACHE_HIT -gt 0 ]; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Cache Docker images.
      id: cache
      if: ${{ steps.check_cache.outputs.exists == 'false' }}
      uses: ScribeMD/docker-cache@0.5.0
      with:
        key: kurtosis-docker-${{ runner.os }}-${{ steps.kurtosis_version.outputs.kurtosis_version }}
    
    - name: "Generate dummy kurtosis config"
      if: ${{ steps.check_cache.outputs.exists == 'false' }}
      shell: bash
      run: |
        mkdir -p ./temp
        echo "{\"participants\": []}" > ./temp/test-network.yaml

    - name: Run kurtosis testnet for cache warmup
      if: ${{ steps.cache.outputs.cache-hit == 'false' }}
      continue-on-error: true
      id: testnet
      uses: ethpandaops/kurtosis-assertoor-github-action@v1
      with:
        kurtosis_extra_args: "--image-download always --non-blocking-tasks --verbosity DETAILED"
        kurtosis_backend: docker
        ethereum_package_url: github.com/pk910/kurtosis-dummy-pkg
        ethereum_package_branch: main
        ethereum_package_args: "./temp/test-network.yaml"
        enclave_name: "assertoor-warmup"
        await_assertoor_tests: "false"
        enclave_dump: "false"

