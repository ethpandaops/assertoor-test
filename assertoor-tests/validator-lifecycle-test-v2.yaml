id: validator-lifecycle-test-v2-1
name: "Validator Lifecycle Test (v2)"
timeout: 336h
config:
  #walletPrivkey: ""
  depositContract: "0x4242424242424242424242424242424242424242"

tasks:
- name: check_clients_are_healthy
  title: "Check if at least one client is ready"
  timeout: 5m
  config:
    minClientCount: 1

- name: generate_child_wallet
  title: "Generate wallet for lifecycle test"
  config:
    prefundMinBalance: 385000000000000000000 # ensure 321 ETH
    walletAddressResultVar: "depositorAddress"
    walletPrivateKeyResultVar: "depositorPrivateKey"
  configVars:
    privateKey: "walletPrivkey"

# generate voluntary exits
- name: run_tasks
  title: "Generate voluntary exits, track inclusion & wait for full withdrawals"
  config:
    stopChildOnResult: false
    tasks:

    - name: run_tasks_concurrent
      title: "Wait for exit & full withdrawal"
      config:
        tasks:
        - name: run_task_matrix
          title: "Wait for validators to become exited"
          timeout: 6h
          configVars:
            matrixValues: "| [.validatorPubkeys[0], .validatorPubkeys[1], .validatorPubkeys[4], .validatorPubkeys[5], .validatorPubkeys[8], .validatorPubkeys[9]]"
          config:
            runConcurrent: true
            matrixVar: "validatorPubkey"
            task:
              name: check_consensus_validator_status
              title: "Wait for validator to become exited (${validatorPubkey})"
              config:
                validatorStatus:
                - exited_unslashed
                - withdrawal_possible
                - withdrawal_done
              configVars:
                validatorPubKey: "validatorPubkey"
        - name: run_task_matrix
          title: "Wait for full withdrawals"
          timeout: 28h
          configVars:
            matrixValues: "| [.validatorPubkeys[0], .validatorPubkeys[1], .validatorPubkeys[4]]"
          config:
            runConcurrent: true
            matrixVar: "validatorPubkey"
            task:
              name: check_consensus_block_proposals
              title: "Wait for withdrawal for ${validatorPubkey}"
              config:
                minWithdrawalCount: 1
              configVars:
                expectWithdrawals: "| [{publicKey: .validatorPubkey, address: .depositorAddress, minAmount: 31000000000000000000}]"


# status:
#
# key 0-4 have withdrawal creds
#
# key 0: exited & withdrawn
# key 1: exited & withdrawn
# key 2: slashed & withdrawn
# key 3: active
# key 4: exited & withdrawn
#
# key 5: exited & withdrawable now (double deposit)
# key 6: active
# key 7: slashed & withdrawable now
# key 8: exited & withdrawable now
# key 9: exited & withdrawable now

# slash last 2 validators after exitability delay (1 with withdrawal address, 1 without)
- name: run_tasks
  title: "Generate slashings & track inclusion"
  config:
    stopChildOnResult: false
    tasks:
    - name: run_task_background
      title: "Generate slashings & track inclusion"
      config:
        onBackgroundComplete: failOrIgnore
        backgroundTask:
          name: run_tasks
          title: "Generate slashings"
          config:
            stopChildOnResult: false
            tasks:
            - name: generate_slashings
              title: "Generate attester slashing for key 3"
              config:
                slashingType: "attester"
                limitTotal: 1
                startIndex: 3
                indexCount: 1
              configVars:
                mnemonic: "validatorMnemonic"
            - name: generate_slashings
              title: "Generate proposer slashing for key 6"
              config:
                slashingType: "proposer"
                limitTotal: 1
                startIndex: 6
                indexCount: 1
              configVars:
                mnemonic: "validatorMnemonic"
        foregroundTask:
          name: run_tasks_concurrent
          title: "Wait for inclusion of all slashings"
          timeout: 30m
          config:
            tasks:
            - name: check_consensus_block_proposals
              title: "Wait for slashing inclusion for key 3"
              config:
                minSlashingCount: 1
                minAttesterSlashingCount: 1
              configVars:
                expectSlashings: "| [{publicKey: .validatorPubkeys[3], slashingType: \"attester\"}]"
            - name: check_consensus_block_proposals
              title: "Wait for slashing inclusion for key 6"
              config:
                minSlashingCount: 1
                minProposerSlashingCount: 1
              configVars:
                expectSlashings: "| [{publicKey: .validatorPubkeys[6], slashingType: \"proposer\"}]"

# generate bls changes
- name: run_tasks
  title: "Generate BLS changes, track inclusion & wait for full withdrawals"
  config:
    stopChildOnResult: false
    tasks:

    - name: run_task_background
      title: "Generate BLS changes, track inclusion & wait for full withdrawals"
      config:
        onBackgroundComplete: failOrIgnore
        backgroundTask:
          name: generate_bls_changes
          title: "Generate 5 BLS changes"
          config:
            limitTotal: 5
            startIndex: 5
          configVars:
            mnemonic: "validatorMnemonic"
            targetAddress: "depositorAddress"
        foregroundTask:
          name: run_tasks_concurrent
          title: "Wait for inclusion of all BLS changes & full withdrawals"
          config:
            tasks:
            - name: run_task_matrix
              title: "Wait for inclusion of all BLS changes"
              timeout: 1h
              configVars:
                matrixValues: "validatorPubkeys[5:]"
              config:
                runConcurrent: true
                matrixVar: "validatorPubkey"
                task:
                  name: check_consensus_block_proposals
                  title: "Wait for BLS change inclusion for ${validatorPubkey}"
                  config:
                    minBlsChangeCount: 1
                  configVars:
                    expectBlsChanges: "| [{publicKey: .validatorPubkey, address: .depositorAddress}]"
            - name: run_tasks_concurrent
              title: "Wait for full withdrawals"
              timeout: 28h
              config:
                tasks:
                - name: check_consensus_block_proposals
                  title: "Wait for partial withdrawal for ${{ validatorPubkeys[5] }}"
                  config:
                    minWithdrawalCount: 1
                  configVars:
                    expectWithdrawals: "| [{publicKey: .validatorPubkeys[5], address: .depositorAddress, minAmount: 63500000000000000000}]"
                - name: check_consensus_block_proposals
                  title: "Wait for partial withdrawal for ${{ validatorPubkeys[8] }}"
                  config:
                    minWithdrawalCount: 1
                  configVars:
                    expectWithdrawals: "| [{publicKey: .validatorPubkeys[8], address: .depositorAddress, minAmount: 31500000000000000000}]"
                - name: check_consensus_block_proposals
                  title: "Wait for partial withdrawal for ${{ validatorPubkeys[9] }}"
                  config:
                    minWithdrawalCount: 1
                  configVars:
                    expectWithdrawals: "| [{publicKey: .validatorPubkeys[9], address: .depositorAddress, minAmount: 31500000000000000000}]"
              

# all keys should be extied now.
# slashed validators have a withdrawal delay of 2048 epochs, which is not tracked here. this affects key 2, 3, 6 & 7.
# all other keys should be withdrawn now. (6 keys)

cleanupTasks:
- name: generate_bls_changes
  title: "Generate bls changes for all test validators"
  config:
    limitTotal: 10
    indexCount: 10
  configVars:
    mnemonic: "validatorMnemonic"
- name: generate_exits
  title: "Exit all test validators"
  config:
    limitTotal: 10
    indexCount: 10
  configVars:
    mnemonic: "validatorMnemonic"